searchState.loadedDescShard("grant", 0, "An open-source project that aims to manage Redshift …\nRead the config from the given path and apply it to the …\nApply all config files from the given directory.\nApply a configuration to a redshift by file name. Yaml …\nManage database roles and privileges in GitOps style\nGenerate sample configuration file\nGenerate random password\nInspect current database cluster with connection info from …\nValidate a configuration file or a target directory that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApply all files in the current folder or target folder (if …\nDry run mode, only print what would be apply\nThe path to the file to read, directory is not supported …\nThe path to the file or directory If the target is not …\nThe path to the file to read\nThe target folder\nNo special characters\nThe password, using to create md5 hash\nThe target folder\nThe username, using to create md5 hash\nConfiguration contains all the information needed to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnection configuration section. The user on the …\nConnection type. Supported values: Postgres\nExpand environment variables in the <code>url</code> field. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfiguration for a role.\nRole Database Level.\nRole Schema Level.\nRole Table Level.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate role database to SQL.\nGenerate role schema to sql.\nGenerate role table to sql.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnection to the database, currently only Postgres and …\nPresentation for a user in the database\nPresentation for a user database privilege in the database …\nPresentation for a user schema privilege in the database …\nPresentation for a user table privilege in the database …\nReturns the connection_info\nExecutes a statement, returning the number of rows …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConnection by a connection string.\nGet current database name.\nGet the current database roles for user <code>user_name</code> in …\nGet the user schema privileges for current database\nGet the user table privileges for current database\nGet the list of users\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA convenience function which store the connection string …\nExecutes a statement, returning the resulting rows A …\nGenerate project template to given target\nGenerating password with given length\nValidate target yaml file\nValidate the target PathBuf")